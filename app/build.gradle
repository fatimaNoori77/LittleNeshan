plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'ir.noori.littleneshan'
    compileSdk 35

    defaultConfig {
        applicationId "ir.noori.littleneshan"
        minSdk 23
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        def apiKey = project.hasProperty("NESHAN_API_KEY") ? project.NESHAN_API_KEY : ""
        buildConfigField "String", "NESHAN_API_KEY", "\"${apiKey}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

//    splits {
//        abi {
//            enable true
//            reset()
//            include 'armeabi-v7a'
//            universalApk false
//        }
//    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout

    implementation libs.fragment
    implementation libs.navigation.fragment
    implementation libs.navigation.ui
    implementation libs.navigation.dynamic.features.fragment

    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    implementation libs.core.splashscreen

    //Neshan sdk library
    implementation libs.mobile.sdk
    implementation libs.services.sdk
    implementation libs.common.sdk

    //Play Services
    implementation libs.play.services.gcm
    implementation libs.play.services.location
    implementation libs.play.services.maps

    implementation libs.sdp.android

    // Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.okhttp
    implementation libs.logging.interceptor

    // Lifecycle ViewModel + LiveData
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lifecycle.livedata.ktx

    implementation libs.lottie

    // Room
    implementation libs.androidx.room.runtime.v271
    annotationProcessor libs.androidx.room.compiler.v271

}